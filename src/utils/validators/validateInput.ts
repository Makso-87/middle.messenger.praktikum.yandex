import { Input } from '../../components/input';

export type validationRulesType = {
  [key: string]: RegExp;
};

const rules: validationRulesType = {
  title: /(?=^.{3,50}$)([a-zA-Zа-яА-Я0-9]+[a-zа-я]+[0-9-_]*)([a-zA-Zа-яА-Я]*)/, // от 3 до 20 символов, латиница, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов (допустимы дефис и нижнее подчёркивание).
  first_name: /^[A-ZА-Я][a-zа-я-]+/, // латиница или кириллица, первая буква должна быть заглавной, без пробелов и без цифр, нет спецсимволов (допустим только дефис).
  second_name: /^[A-ZА-Я][a-zа-я-]+/, // латиница или кириллица, первая буква должна быть заглавной, без пробелов и без цифр, нет спецсимволов (допустим только дефис).
  display_name: /^[A-ZА-Я][a-zа-я-]+/, // латиница или кириллица, первая буква должна быть заглавной, без пробелов и без цифр, нет спецсимволов (допустим только дефис).
  login: /(?=^.{3,20}$)([a-zA-Z0-9]+[a-z]+[0-9-_]*)([a-zA-Z]*)/, // от 3 до 20 символов, латиница, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов (допустимы дефис и нижнее подчёркивание).
  email: /^[a-z0-9-_]+@[a-z]{3,}\.[a-z]{2,8}$/, // латиница, может включать цифры и спецсимволы вроде дефиса, обязательно должна быть «собака» (@) и точка после неё, но перед точкой обязательно должны быть буквы.
  password: /(?=^.{8,40}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/, // от 8 до 40 символов, обязательно хотя бы одна заглавная буква и цифра.
  checkPassword: /(?=^.{8,40}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/, // от 8 до 40 символов, обязательно хотя бы одна заглавная буква и цифра.
  oldPassword: /(?=^.{8,40}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/, // от 8 до 40 символов, обязательно хотя бы одна заглавная буква и цифра.
  newPassword: /(?=^.{8,40}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/, // от 8 до 40 символов, обязательно хотя бы одна заглавная буква и цифра.
  phone: /^(8|\+7)(\d{10,14})/, // от 10 до 15 символов, состоит из цифр, может начинаться с плюса.
  message: /.+/, // не должно быть пустым.
};

export const errorsMessages = {
  title: 'Допустимы символы "a-z A-Z а-я А-Я 0-9 - _". Длина должна быть от 3 до 50 символов.',
  first_name: 'Допустимы символы "a-z A-Z а-я А-Я -" без пробелов. Первая буква должна быть заглавной.',
  second_name: 'Допустимы символы "a-z A-Z а-я А-Я -" без пробелов. Первая буква должна быть заглавной.',
  login: 'Допустимы символы "a-z A-Z 0-9 - _". Длина должна быть от 3 до 20 символов.',
  email: 'Допустимы символы "a-z 0-9 - _" без пробелов. Обязательно должен быть символ @ и точка перед именем домена. Имя домена должно быть от 2 до 6 символов',
  password: 'Длина пароля от 8 до 40 символов, обязательно должны быть хотя бы одна заглавная буква и цифра.',
  phone: 'Допустимы символы "0-9". Может начинаться с "+". Длина должна быть от 10 до 15 символов.',
  message: 'Не должно быть пустым',
  form: 'Некоторые поля заполнены неверно. Пожалуйста проверьте сообщения об ошибках.',
  passwordsMatch: 'Пароли должны совпадать',
};
export const isValidInputValue = (value: string, name: string) => rules[name].test(value);

export const validateInput = (inputBlock: Input) => (event: InputEvent) => {
  const { value, name } = event.target as HTMLInputElement;
  const result = isValidInputValue(value, name);

  if (result) {
    // inputBlock.setProps({ error: false });
    inputBlock.children.errorMessage.hide();
  } else {
    // inputBlock.setProps({ error: true, attributes: { autofocus: 'autofocus' } });
    inputBlock.children.errorMessage.show();
  }
};
